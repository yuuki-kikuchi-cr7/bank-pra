name: Deploy to production

on:
  push:
    branches: ["main"]


permissions:
  id-token: write
  contents: read
  
jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        aws-region: us-west-2
     
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2


    - name: Test jq parsing
      run: |
          echo '{"DB_DRIVER":"postgres","DB_SOURCE":"postgresql://root:Yu8ki247@simple-bank.cn2maog4si3x.us-west-2.rds.amazonaws.com:5432/simple_bank"}' | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]'

    - name: Debug app.env file
      run: cat app.env
        
      
    - name: Load secrets and save to app.env
      run: aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env

    - name: Build, tag, and push docker image to Amazon ECR
      env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: simplebank
          IMAGE_TAG: ${{ github.sha }}
      run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG